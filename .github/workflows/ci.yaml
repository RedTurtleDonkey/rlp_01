name: CI

on: push

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    
    env:
      COVERITY: coverity_tool

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Cache Local Maven Repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Compile Test and Verify
        run: mvn clean verify
        
  coverity:
    needs: verify
  
    name: Coverity
    runs-on: ubuntu-latest
    
    env:
      COVERITY: $GITHUB_WORKSPACE/coverity_tool
      COVERITY_EXISTS: true
      
    steps:
      - name: Cache Coverity
        uses: actions/cache@v2
        with:
          path: ${{ env.COVERITY }}
          key: ${{ runner.os }}-coverity-${{ hashFiles('${{ COVERITY }}/VERSION.xml') }}
          
      - name: Check Coverity Existance
        run: test -e ${{ env.COVERITY }} && echo "COVERITY_EXISTS=true" >> $GITHUB_ENV || echo "Coverity does not exist in the cache."
        
      - name: Temp mkdir
        run: mkdir -p ${{ env.COVERITY }}
        
      - name: List
        run: cd ${{ GITHUB_WORKSPACE }} && ls -la
          
      - name: Download Coverity
        if: env.COVERITY_EXISTS == 'false'
        run: wget https://scan.coverity.com/download/linux64 --post-data "token=${{ secrets.COVERITY_TOKEN }}&project=rlp_01" -O coverity_tool.tgz && tar zxvf $COVERITY.tgz
        
      - name: Cache Downloaded Coverity
        if: env.COVERITY_EXISTS == 'false'
        uses: actions/cache@v2
        with:
          path: env.COVERITY
          key: ${{ runner.os }}-coverity-${{ hashFiles('$COVERITY/VERSION.xml') }}
          
      - name: Cache Local Maven Repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
